import asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command

TELEGRAM_TOKEN = "8129671831:AAEvmBKaF0oGcV5O-S-lnpuI4yvF3hL0SvQ"

bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()

web3_url = "https://notion-and-ai-bot.vercel.app"  # –ü—É–±–ª–∏—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞

@dp.message(Command("start"))
async def start_handler(message: Message):
    photo = FSInputFile("static/img/brain.png")
    caption = (
        "<b>Notion & AI ‚Äî —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–ª—è –æ–±–º–µ–Ω–∞ –æ–ø—ã—Ç–æ–º, –∏–¥–µ—è–º–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º –∏ Notion.</b>\n\n"
        "–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —É—Ä–æ–∫–∏, –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–º–æ–∂–µ—Ç–µ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏!"
    )
    await message.answer_photo(photo, caption=caption, parse_mode="HTML")
    # –û–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ callback, –≤—Ç–æ—Ä–∞—è —Å url
    inline_kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –≥—Ä—É–ø–ø—ã Notion & AI", url=web3_url)],
            [InlineKeyboardButton(text="Instagram –≥—Ä—É–ø–ø—ã", url="https://www.instagram.com/notion.and.ai/?igsh=eHRzcXByODJtaWsx#")]
        ]
    )
    await message.answer(
        "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b> –ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –≥—Ä—É–ø–ø—ã Notion & AI –∏–ª–∏ Instagram.\n\n/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.",
        reply_markup=inline_kb, parse_mode="HTML"
    )

@dp.message(Command("help"))
async def help_handler(message: Message):
    text = (
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –∫–∞—Ä—Ç–∏–Ω–∫–∞, –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –≥—Ä—É–ø–ø—ã –∏ –Ω–∞ —Å–∞–π—Ç.\n"
        "/link_for_notion_and_ai ‚Äî –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n"
        "/button ‚Äî –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –≥—Ä—É–ø–ø—ã Notion & AI. –í—ã–≤–æ–¥–∏—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫—É.\n"
        "/webapp ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å–∏–Ω—é—é –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é –≥—Ä—É–ø–ø—ã –∫–∞–∫ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ Telegram (–≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ) –∏–ª–∏ –æ–±—ã—á–Ω—É—é —Å—Å—ã–ª–∫—É (–≤ –≥—Ä—É–ø–ø–µ).\n"
        "/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.\n"
        "\n"
        "<b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b> –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç-–º–µ–Ω—é –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /start, /button –∏–ª–∏ /webapp. –í –≥—Ä—É–ø–ø–µ –∫–æ–º–∞–Ω–¥–∞ /webapp –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—ã—á–Ω—É—é —Å—Å—ã–ª–∫—É, –∞ –≤ –ª–∏—á–∫–µ ‚Äî –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n"
    )
    await message.answer(text, parse_mode="HTML")

@dp.message(Command("link_for_notion_and_ai"))
async def link_for_notion_and_ai_handler(message: Message):
    group_link = "https://t.me/+1iaRRpDUcos3MjMy"
    text = (
        "<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –ü—É—Ç–Ω–∏–∫,</b> –∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–µ—Ç—Å—è —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –Ω–µ–π—Ä–æ—Å–µ—Ç—è—Ö.\n"
        "<b>–ü—Ä–æ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ</b> –∏ <b>–ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è</b> –∫ –Ω–∞–º, —á—Ç–æ–±—ã –ø—É—Ç—å –±—ã–ª –ª–µ–≥—á–µ –∏ —É–≤–µ—Ä–µ–Ω–Ω–µ–π!\n\n"
        f"{group_link}"
    )
    await message.answer(text, parse_mode="HTML")

@dp.message(Command("button"))
async def button_handler(message: Message):
    inline_kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ú–µ–Ω—é –≥—Ä—É–ø–ø—ã Notion & AI", url=web3_url)]
        ]
    )
    await message.answer(
        "<b>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –≥—Ä—É–ø–ø—ã Notion & AI</b>",
        reply_markup=inline_kb,
        parse_mode="HTML"
    )

@dp.message(Command("webapp"))
async def webapp_handler(message: Message):
    webapp_url = "https://notion-and-ai-bot.vercel.app"
    if message.chat.type == "private":
        # –í –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ ‚Äî web_app-–∫–Ω–æ–ø–∫–∞
        inline_kb = InlineKeyboardMarkup(
            inline_keyboard=[[
                InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram", web_app={"url": webapp_url})
            ]]
        )
        await message.answer(
            "üöÄ –û—Ç–∫—Ä–æ–π –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:",
            reply_markup=inline_kb
        )
    else:
        # –í –≥—Ä—É–ø–ø–µ ‚Äî –æ–±—ã—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å url
        inline_kb = InlineKeyboardMarkup(
            inline_keyboard=[[
                InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –≥—Ä—É–ø–ø—ã Notion & AI", url=webapp_url)
            ]]
        )
        await message.answer(
            "<b>–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –≥—Ä—É–ø–ø—ã Notion & AI</b> ‚Äî –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!",
            reply_markup=inline_kb,
            parse_mode="HTML"
        )

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main()) 